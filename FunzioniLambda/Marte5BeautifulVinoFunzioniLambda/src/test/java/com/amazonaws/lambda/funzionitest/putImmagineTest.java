package com.amazonaws.lambda.funzionitest;

import java.io.IOException;

import org.junit.Assert;
import org.junit.BeforeClass;
import org.junit.Test;

import com.amazonaws.lambda.funzioni.common.BeautifulVinoPut;
import com.amazonaws.lambda.funzioni.put.backup.putEvento;
import com.amazonaws.lambda.funzioni.put.backup.putImage;
import com.amazonaws.services.lambda.runtime.Context;
import com.marte5.modello.richieste.put.RichiestaPutEvento;
import com.marte5.modello.richieste.put.RichiestaPutGenerica;
import com.marte5.modello.richieste.put.RichiestaPutImage;
import com.marte5.modello.risposte.put.RispostaPutEvento;
import com.marte5.modello.risposte.put.RispostaPutGenerica;
import com.marte5.modello.risposte.put.RispostaPutImage;
import com.marte5.modello2.Utente;

/**
 * A simple test harness for locally invoking your Lambda function handler.
 */
public class putImmagineTest {

    private static RichiestaPutGenerica input;

    @BeforeClass
    public static void createInput() throws IOException {
        // TODO: set up your sample input object here.
    	String base64Image = "";
    	
    	Utente utente = new Utente();
    	utente.setBiografiaUtente("Titolare di CuoriiLabs e appassionato sviluppatore");
    	utente.setUsernameUtente("cuoriilabs test");
    	utente.setProfessioneUtente("");
    	utente.setIdUtente("1905c869-a9d5-4a3c-b375-adf297c18184");
    	utente.setEmailUtente("info@cuoriilabs.com");
    	utente.setCittaUtente("San Gavino Monreale");
    	
        input = new RichiestaPutGenerica();
        input.setUtente(utente);
        input.setFunctionName("putUserProfileImageWithUserGen");
        input.setBase64Image(base64Image);
    }

    private Context createContext() {
        TestContext ctx = new TestContext();

        // TODO: customize your context here if needed.
        ctx.setFunctionName("Your Function Name");

        return ctx;
    }

    @Test
    public void testputEvento() {
        BeautifulVinoPut handler = new BeautifulVinoPut();
        Context ctx = createContext();

        RispostaPutGenerica output = handler.handleRequest(input, ctx);

        // TODO: validate output here if needed.
        Assert.assertEquals("Hello from Lambda!", output);
    }
}
